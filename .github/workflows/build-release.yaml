name: Create release package

on:
  workflow_dispatch:
  push:
    branches:
      - "release/*"

env:
  SERVER: production
  PUBLIC_PATH: /

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Extract release name from branch ref
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/release/})"
        id: release_name

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Create release bundle
        run: git archive HEAD --prefix="bstk_datatables-${{ github.sha }}/" --output="bstk_datatables-${{ github.sha }}.tgz"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build packages
        run: poetry build --no-interaction

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.release_name.outputs.branch }}"
          draft: true
          prerelease: true
          title: "Release / ${{ steps.release_name.outputs.branch }}"
          files: |
            bstk_datatables-${{ github.sha }}.tgz
            dist/*

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
